webpackJsonp([81],{2314:function(n,a,s){n.exports={dataset:s(2860)}},2860:function(n,a){n.exports={content:["article",["h2","zh-CN"],["p","绑定数据源。"],["h2","en-US"],["p","DataSet."],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> DataSet<span class="token punctuation">,</span> Tree <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-hap-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">nodeRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> record <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> record<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    primaryKey<span class="token punctuation">:</span> <span class="token string">\'id\'</span><span class="token punctuation">,</span>\n    queryUrl<span class="token punctuation">:</span> <span class="token string">\'/tree.mock\'</span><span class="token punctuation">,</span>\n    autoQuery<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    parentField<span class="token punctuation">:</span> <span class="token string">\'parentId\'</span><span class="token punctuation">,</span>\n    expandField<span class="token punctuation">:</span> <span class="token string">\'expand\'</span><span class="token punctuation">,</span>\n    idField<span class="token punctuation">:</span> <span class="token string">\'id\'</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'id\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'number\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'expand\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'boolean\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'parentId\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'number\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    events<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      select<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> record<span class="token punctuation">,</span> dataSet <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'select\'</span><span class="token punctuation">,</span> record<span class="token punctuation">,</span> dataSet<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      unSelect<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> record<span class="token punctuation">,</span> dataSet <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'unSelect\'</span><span class="token punctuation">,</span> record<span class="token punctuation">,</span> dataSet<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tree</span>\n        <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n        <span class="token attr-name">checkable</span>\n        <span class="token attr-name">renderer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>nodeRenderer<span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","import { DataSet, Tree } from 'choerodon-hap-ui/pro';\n\nfunction nodeRenderer({ record }) {\n  return record.get('text');\n}\n\nclass App extends React.Component {\n  ds = new DataSet({\n    primaryKey: 'id',\n    queryUrl: '/tree.mock',\n    autoQuery: true,\n    parentField: 'parentId',\n    expandField: 'expand',\n    idField: 'id',\n    fields: [\n      { name: 'id', type: 'number' },\n      { name: 'expand', type: 'boolean' },\n      { name: 'parentId', type: 'number' },\n    ],\n    events: {\n      select: ({ record, dataSet }) => console.log('select', record, dataSet),\n      unSelect: ({ record, dataSet }) => console.log('unSelect', record, dataSet),\n    },\n  });\n\n  render() {\n    return (\n      <Tree\n        dataSet={this.ds}\n        checkable\n        renderer={nodeRenderer}\n      />\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  mountNode\n);"]]],meta:{order:0,title:{"zh-CN":"绑定数据源","en-US":"DataSet"},filename:"components-pro/tree/demo/dataset.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]]}}});